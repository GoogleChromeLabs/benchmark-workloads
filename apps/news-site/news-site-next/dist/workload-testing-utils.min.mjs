import{TestRunner}from"./test-runner.mjs";export class BenchmarkTestStep{constructor(t,e){this.name=t,this.run=e}async runAndRecord(t,e,n,r){const s=new TestRunner(null,null,t,e,n,r);return await s.runTest()}}export class BenchmarkTestSuite{constructor(t,e){this.name=t,this.tests=e}record(t,e,n){return{tests:{Sync:e,Async:n},total:e+n}}async runAndRecord(t,e){const n={tests:{},total:0},r=`suite-${this.name}-start`,s=`suite-${this.name}-end`;performance.mark(r);for(const r of this.tests){const s=await r.runAndRecord(t,this,r,this.record);n.tests[r.name]=s,n.total+=s.total,e?.(r.name)}return performance.mark(s),performance.measure(`suite-${this.name}`,r,s),{type:"suite-tests-complete",status:"success",result:n,suitename:this.name}}}export class BenchmarkSuitesManager{constructor(t,e){this.name=t,this.suites=e}getSuiteByName(t){return this.suites.find((e=>e.name===t))}}export function getParent(t,e){t=t.shadowRoot??t;return e.reduce(((t,e)=>{const n=t.querySelector(e);return n.shadowRoot??n}),t)}export function getElement(t,e=[],n=document){return getParent(n,e).querySelector(t)}export function getAllElements(t,e=[],n=document){return Array.from(getParent(n,e).querySelectorAll(t))}export function forceLayout(){const t=document.body.getBoundingClientRect();return document.elementFromPoint(t.width/2|0,t.height/2|0)}